1. Utworzyc tabelke, tabela_bledow, sk³adajaca sie z 2 pól: pole o nazwie kod typu numerycznego i pole o nazwie komunikat typu Tekstowego o max rozmiarze 200. Napisaæ kod bloku anonimowego, w którym za pomoc¹ kursora niejawnego wyœwietlimy onfo o:
a) osobie której identyfIKATOR id=50
b) wszystkich osobach gdzie id < 50
Zaprojektowac obsluge wyj¹tków za pomoc¹ others, w ten sposob ze do tabeli tabela_bledow, bedzie wstawiany kod i komunikat o bledzie, ktory zostal obsluzony za pmoca othersa po uruchomieniu tego bloku.

a)

DECLARE
  z_id_os osoby.id_os%TYPE:=50;
  z_imie osoby.imie1%TYPE;
  z_nazwisko osoby.nazwisko%TYPE;
  z_kod NUMERIC;
  z_komunikat VARCHAR2(200);

BEGIN
  SELECT id_os, imie1, nazwisko
  INTO z_id_os, z_imie, z_nazwisko
  FROM osoby
  WHERE id_os=z_id_os;

EXCEPTION

  WHEN OTHERS THEN
  z_kod:=SQLCODE;
  z_komunikat:=SUBSTR(SQLERRM,1,200);
  INSERT INTO tabela_bledow(kod,komunikat) 
  VALUES (z_kod, z_komunikat);
  
END;
/

b)

DECLARE
  z_id_os osoby.id_os%TYPE:=50;
  z_imie osoby.imie1%TYPE;
  z_nazwisko osoby.nazwisko%TYPE;
  z_kod NUMERIC;
  z_komunikat VARCHAR2(200);
  z_licznik INT;

BEGIN
  
  z_licznik:=1;
  
  LOOP
  SELECT id_os, imie1, nazwisko
  INTO z_id_os, z_imie, z_nazwisko
  FROM osoby
  WHERE id_os=z_licznik;
  z_licznik:=z_licznik+1;
  DBMS_OUTPUT.PUT_LINE(z_id_os ||' '|| z_imie||' '|| z_nazwisko);
  EXIT WHEN z_licznik=50;
  END LOOP;

EXCEPTION

  WHEN OTHERS THEN
  z_kod:=SQLCODE;
  z_komunikat:=SUBSTR(SQLERRM,1,200);
  INSERT INTO tabela_bledow(kod,komunikat) 
  VALUES (z_kod, z_komunikat);
  
END;
/
-------------------------------------------------------------------------------------------------------------------

2. Napisac procedure dodaj_nowa_osoba, która bedzie wprowadza³a osobe do tabeli osoby, przy czym uwzglêdniæ fakt sprawdzenia wprowadzania istniejacej juz osoby.


CREATE OR REPLACE PROCEDURE dodaj_nowa_osobe(
  p_Id osoby.id_os%TYPE,
  p_Nazwisko osoby.nazwisko%TYPE,
  p_Imie osoby.imie1%TYPE,
  p_Imie2 osoby.imie2%TYPE,
  p_D_ur osoby.d_ur%TYPE,
  p_Plec osoby.plec%TYPE) AS
  
  z_sprawdzenie NUMBER;
BEGIN
  
  SELECT COUNT(id_os)
  INTO z_sprawdzenie
  FROM osoby
  WHERE id_os=p_Id;
  
  IF z_sprawdzenie=1 THEN
    RAISE_APPLICATION_ERROR(-20005,'Jest juz taka osoba o tych danych');
  ELSE
    INSERT INTO osoby(id_os,nazwisko, imie1, imie2, d_ur, plec)
    VALUES (p_Id, p_Nazwisko, p_Imie, p_Imie2, p_D_ur, p_Plec);
    COMMIT;
  END IF;
  
END;
/

BEGIN 
  dodaj_nowa_osobe(32,'Ignaczak','Gosia',null,TO_DATE('11/01/1196','dd/mm/yyyy'),'K');

END;
/

--select * from osoby;
-------------------------------------------------------------------------------------------------------------------

3. Utworzyæ procedure i funkcje dotyczaca obliczen liczby osob o zadanej plci wywolujac je obie 
'Liczba kobiet = 18
Liczba mê¿czyzn = 12'.


CREATE OR REPLACE PROCEDURE policz_plec(
  p_Plec osoby.plec%TYPE
)AS
z_ile NUMBER;
z_plec VARCHAR2(20);
BEGIN
  
  SELECT COUNT(id_os)
  INTO z_ile
  FROM osoby
  WHERE plec=p_Plec;
  
  IF p_Plec='K' THEN
    z_plec:='kobiet';
  ELSE
    z_plec:='mê¿czyzn';
  END IF;
  
  DBMS_OUTPUT.PUT_LINE('Liczba '||z_plec||' = '||z_ile );
END;
/

CREATE OR REPLACE FUNCTION policz_plec_funkcja(
  p_PlecF osoby.plec%TYPE
) RETURN NUMBER IS
z_ile NUMBER;
z_plec VARCHAR2(20);
BEGIN
  
  SELECT COUNT(id_os)
  INTO z_ile
  FROM osoby
  WHERE plec=p_PlecF;
  
  
  RETURN z_ile;
END;
/

DECLARE
  z_plec osoby.plec%TYPE:='M';
  z_ile NUMBER;
  z_komunikat VARCHAR2(20);
BEGIN
  
  IF z_plec='K' THEN
    z_ile:=policz_plec_funkcja(z_plec);
    z_komunikat:='kobiet';
  ELSE
    z_ile:=policz_plec_funkcja(z_plec);
    z_komunikat:='mê¿czyzn';
  END IF;
  
     DBMS_OUTPUT.PUT_LINE('Liczba '||z_komunikat||' = '||z_ile);
END;
/
-------------------------------------------------------------------------------------------------------------------

4. Zaprojektowac procedure wyswietlania danych id os nazwiska polaczonego z imieniem  kierownika i jego nazwsikko polaczonego z 1 imieniem oraz liczby dni kierowania wydzialem przy czym maja to byc dane osoby ktora najdluzej kierowala wydzialem przy czym nazwa wydzialu jest znana

CREATE OR REPLACE PROCEDURE kierownik_Naj ( p_Nazwa_wydzialu wydzialy.nazwa%TYPE)
AS
z_id osoby.id_os%TYPE;
z_nazwa VARCHAR2(50);
z_d_ur osoby.d_ur%TYPE;
z_plec osoby.plec%TYPE;
BEGIN
  SELECT id_os, INITCAP(nazwisko) || INITCAP(imie1) nazwisko_i_imie, d_ur, plec
  INTO z_id, z_nazwa, z_d_ur, z_plec
  FROM osoby o JOIN wydzialy w ON o.id_os=w.id_os
  WHERE INITCAP(w.nazwa)=INITCAP(p_Nazwa_wydzialu)
  AND id_os=(SELECT id_os
             FROM kierownicy
             WHERE (do-od)=(SELECT MAX(NVL(do-od,SYSDATE))
                            FROM kierownicy));
END;
/
 nieskonczone!!!!!!!!!


